{"version":3,"sources":["hoc/withAutRedirect.js","components/Profile/MyPosts/Post/Posts.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","Post","className","classes","item","src","alt","message","likes","maxLength10","maxLengthCreator","MyPosts","memo","postsElements","profilePage","postsData","map","post","likesCount","postsBlock","AddPostReduxForm","onSubmit","values","addPost","newPost","posts","reduxForm","form","handleSubmit","Field","name","component","Textarea","validate","required","MyPostsContainer","dispatch","text","addPostActionCreator","ProfileSatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","autoFocus","value","onBlur","updateStatus","onChange","e","target","onDoubleClick","ProfileInfo","profile","descriptionBlock","photos","large","Preloader","Profile","ProfileContainer","userId","match","params","authorizedUserId","history","push","getUserProfile","getStatus","compose","withRouter"],"mappings":"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","file":"static/js/3.6c996f6e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Redirect } from \"react-router\";\r\nimport { connect } from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n\tisAuth: state.auth.isAuth,\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\tclass RedirectComponent extends React.Component {\r\n\t\trender() {\r\n\t\t\tif (!this.props.isAuth) {\r\n\t\t\t\treturn <Redirect to={\"/login\"} />;\r\n\t\t\t}\r\n\t\t\treturn <Component {...this.props} />;\r\n\t\t}\r\n\t}\r\n\r\n\tlet ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(\r\n\t\tRedirectComponent\r\n\t);\r\n\treturn ConnectedAuthRedirectComponent;\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Posts_item__3ioXY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__3hYnE\",\"posts\":\"MyPosts_posts__3ikX6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__15JLy\",\"bg\":\"ProfileInfo_bg__1PNDe\"};","import React from \"react\";\r\nimport classes from \"./Posts.module.css\";\r\n\r\nconst Post = (props) => {\r\n\treturn (\r\n\t\t<div className=\"posts\">\r\n\t\t\t<div className={classes.item}>\r\n\t\t\t\t<img\r\n\t\t\t\t\tsrc=\"https://www.shutterstock.com/blog/wp-content/uploads/sites/5/2019/07/Man-Silhouette.jpg\"\r\n\t\t\t\t\talt=\"\"\r\n\t\t\t\t/>\r\n\t\t\t\t{props.message}\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<span>Like {props.likes}</span>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Post;\r\n","import React from \"react\";\r\nimport Post from \"./Post/Post\";\r\nimport classes from \"./MyPosts.module.css\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport {\r\n\trequired,\r\n\tmaxLengthCreator,\r\n} from \"../../../utils/validators/validator\";\r\nimport { Textarea } from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst MyPosts = React.memo((props) => {\r\n\tlet postsElements = props.profilePage.postsData.map((post) => (\r\n\t\t<Post message={post.message} likes={post.likesCount} />\r\n\t));\r\n\r\n\tlet onAddPost = (values) => {\r\n\t\tprops.addPost(values.newPost);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className={classes.postsBlock}>\r\n\t\t\t<h3>My Posts </h3>\r\n\t\t\t<AddPostReduxForm onSubmit={onAddPost} />\r\n\t\t\t<div className={classes.posts}>{postsElements}</div>\r\n\t\t</div>\r\n\t);\r\n});\r\n\r\nconst AddPostForm = (props) => {\r\n\treturn (\r\n\t\t<form onSubmit={props.handleSubmit}>\r\n\t\t\t<div>\r\n\t\t\t\t<Field\r\n\t\t\t\t\tname={\"newPost\"}\r\n\t\t\t\t\tcomponent={Textarea}\r\n\t\t\t\t\tvalidate={[required, maxLength10]}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<button>Add Post</button>\r\n\t\t\t</div>\r\n\t\t</form>\r\n\t);\r\n};\r\n\r\nconst AddPostReduxForm = reduxForm({ form: \"postAddForm\" })(AddPostForm);\r\n\r\nexport default MyPosts;\r\n","import { connect } from \"react-redux\";\r\nimport { addPostActionCreator } from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\n\r\nlet mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tprofilePage: state.profilePage,\r\n\t};\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\taddPost: (text) => {\r\n\t\t\tdispatch(addPostActionCreator(text));\r\n\t\t},\r\n\t};\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nconst ProfileSatusWithHooks = (props) => {\r\n\tlet [editMode, setEditMode] = useState(false);\r\n\tlet [status, setStatus] = useState(props.status);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetStatus(props.status);\r\n\t}, [props.status]);\r\n\r\n\tconst activeEditMode = () => {\r\n\t\tsetEditMode(true);\r\n\t};\r\n\r\n\tconst deactivateEditMode = () => {\r\n\t\tsetEditMode(false);\r\n\t\tprops.updateStatus(status);\r\n\t};\r\n\r\n\tconst onStatusChange = (e) => {\r\n\t\tsetStatus(e.target.value);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{editMode ? (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tautoFocus={true}\r\n\t\t\t\t\t\tvalue={status}\r\n\t\t\t\t\t\tonBlur={deactivateEditMode}\r\n\t\t\t\t\t\tonChange={onStatusChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<span onDoubleClick={activeEditMode}>\r\n\t\t\t\t\t\t{props.status || \"____\"}\r\n\t\t\t\t\t</span>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default ProfileSatusWithHooks;\r\n","import React from \"react\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport classes from \"./ProfileInfo.module.css\";\r\nimport ProfileSatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = ({ profile, status, updateStatus }) => {\r\n\tif (!profile) {\r\n\t\treturn <Preloader />;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div className={classes.descriptionBlock}>\r\n\t\t\t\t<img src={profile.photos.large} alt=\"ava\" />\r\n\t\t\t\t<ProfileSatusWithHooks\r\n\t\t\t\t\tstatus={status}\r\n\t\t\t\t\tupdateStatus={updateStatus}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default ProfileInfo;\r\n","import React from \"react\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\n\r\nconst Profile = (props) => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<ProfileInfo\r\n\t\t\t\tprofile={props.profile}\r\n\t\t\t\tstatus={props.status}\r\n\t\t\t\tupdateStatus={props.updateStatus}\r\n\t\t\t/>\r\n\t\t\t<MyPostsContainer />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Profile from \"./Profile\";\r\nimport {\r\n\tgetUserProfile,\r\n\tgetStatus,\r\n\tupdateStatus,\r\n} from \"../../redux/profile-reducer\";\r\nimport { withRouter } from \"react-router\";\r\nimport { withAuthRedirect } from \"../../hoc/withAutRedirect\";\r\nimport { compose } from \"redux\";\r\nclass ProfileContainer extends React.Component {\r\n\tcomponentDidMount() {\r\n\t\tlet userId = this.props.match.params.userId;\r\n\t\tif (!userId) {\r\n\t\t\tuserId = this.props.authorizedUserId;\r\n\t\t\tif (!userId) {\r\n\t\t\t\tthis.props.history.push(\"/login\");\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.props.getUserProfile(userId);\r\n\t\tthis.props.getStatus(userId);\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<Profile\r\n\t\t\t\t\t{...this.props}\r\n\t\t\t\t\tprofile={this.props.profile}\r\n\t\t\t\t\tstatus={this.props.status}\r\n\t\t\t\t\tupdateStatus={this.props.updateStatus}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tprofile: state.profilePage.profile,\r\n\t\tstatus: state.profilePage.status,\r\n\t\tauthorizedUserId: state.auth.userId,\r\n\t\tisAuth: state.auth.isAuth,\r\n\t};\r\n};\r\n\r\nexport default compose(\r\n\tconnect(mapStateToProps, { getUserProfile, getStatus, updateStatus }),\r\n\twithRouter,\r\n\twithAuthRedirect\r\n)(ProfileContainer);\r\n"],"sourceRoot":""}