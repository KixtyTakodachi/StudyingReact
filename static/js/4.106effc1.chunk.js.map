{"version":3,"sources":["components/Dialogs/Dialogs.module.css","hoc/withAutRedirect.js","components/Dialogs/Message/Message.jsx","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","Message","className","classes","message","text","DialogItem","path","id","dialog","src","alt","activeClassName","active","name","maxLength100","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","Dialogs","dialogsElemetns","dialogsPage","dialogsData","map","messagesElements","messagesData","dialogs","dialogsItems","messages","values","sendMessage","newMessageBody","compose","dispatch","sendMessageCreator"],"mappings":"yGACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,oJCG/MC,EAA6B,SAACC,GAAD,MAAY,CAC5CC,OAAQD,EAAME,KAAKD,SAGPE,EAAmB,SAACC,GAAe,IACzCC,EADwC,4JAE7C,WACC,OAAKC,KAAKC,MAAMN,OAGT,cAACG,EAAD,eAAeE,KAAKC,QAFnB,cAAC,IAAD,CAAUC,GAAI,eAJsB,GACdC,IAAML,WAYtC,OAHqCM,YAAQX,EAARW,CACpCL,K,0ECZaM,EAJC,SAACJ,GAChB,OAAO,qBAAKK,UAAWC,IAAQC,QAAxB,SAAkCP,EAAMQ,Q,QCejCC,EAfI,SAACT,GACnB,IAAIU,EAAO,YAAcV,EAAMW,GAC/B,OACC,sBAAKN,UAAWC,IAAQM,OAAxB,UACC,qBACCC,IAAI,wEACJC,IAAI,WAEL,cAAC,IAAD,CAASb,GAAIS,EAAMK,gBAAiBT,IAAQU,OAA5C,SACEhB,EAAMiB,W,iCCFLC,EAAeC,YAAiB,KA4ChCC,EAAsBC,YAAU,CAAEC,KAAM,wBAAlBD,EAlBL,SAACrB,GACvB,OACC,uBAAMuB,SAAUvB,EAAMwB,aAAtB,UACC,8BACC,cAACC,EAAA,EAAD,CACCR,KAAK,iBACLS,UAAWC,IACXC,SAAU,CAACC,IAAUX,GACrBY,YAAY,yBAGd,8BACC,kDAUWC,EA9CC,SAAC/B,GAChB,IAAIgC,EAAkBhC,EAAMiC,YAAYC,YAAYC,KAAI,SAACvB,GAAD,OACvD,cAAC,EAAD,CAAYK,KAAML,EAAOK,KAAMN,GAAIC,EAAOD,QAGvCyB,EAAmBpC,EAAMiC,YAAYI,aAAaF,KAAI,SAAC5B,GAAD,OACzD,cAAC,EAAD,CAASC,KAAMD,EAAQA,aAOxB,OACC,sBAAKF,UAAWC,IAAQgC,QAAxB,UACC,qBAAKjC,UAAWC,IAAQiC,aAAxB,SAAuCP,IACvC,qBAAK3B,UAAWC,IAAQkC,SAAxB,SACC,8BAAMJ,MAEP,cAAChB,EAAD,CAAqBG,SAVH,SAACkB,GACpBzC,EAAM0C,YAAYD,EAAOE,uB,kCCFZC,sBACdzC,aAhBqB,SAACV,GACtB,MAAO,CACNwC,YAAaxC,EAAMwC,YACnBvC,OAAQD,EAAME,KAAKD,WAII,SAACmD,GACzB,MAAO,CACNH,YAAa,SAAClC,GACbqC,EAASC,YAAmBtC,SAO9BZ,IAFcgD,CAGbb","file":"static/js/4.106effc1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2idF9\",\"dialogsItems\":\"Dialogs_dialogsItems__3zhpp\",\"active\":\"Dialogs_active__2fwzT\",\"dialog\":\"Dialogs_dialog__1kq-d\",\"messages\":\"Dialogs_messages__27LgH\",\"message\":\"Dialogs_message__1iz68\"};","import React from \"react\";\r\nimport { Redirect } from \"react-router\";\r\nimport { connect } from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n\tisAuth: state.auth.isAuth,\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\tclass RedirectComponent extends React.Component {\r\n\t\trender() {\r\n\t\t\tif (!this.props.isAuth) {\r\n\t\t\t\treturn <Redirect to={\"/login\"} />;\r\n\t\t\t}\r\n\t\t\treturn <Component {...this.props} />;\r\n\t\t}\r\n\t}\r\n\r\n\tlet ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(\r\n\t\tRedirectComponent\r\n\t);\r\n\treturn ConnectedAuthRedirectComponent;\r\n};\r\n","import React from 'react';\r\nimport classes from './../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n\treturn <div className={classes.message}>{props.text}</div>;\r\n};\r\n\r\nexport default Message;","import React from \"react\";\r\nimport classes from \"./../Dialogs.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n\tlet path = \"/dialogs/\" + props.id;\r\n\treturn (\r\n\t\t<div className={classes.dialog}>\r\n\t\t\t<img\r\n\t\t\t\tsrc=\"https://eitrawmaterials.eu/wp-content/uploads/2016/09/person-icon.png\"\r\n\t\t\t\talt=\"preson\"\r\n\t\t\t/>\r\n\t\t\t<NavLink to={path} activeClassName={classes.active}>\r\n\t\t\t\t{props.name}\r\n\t\t\t</NavLink>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default DialogItem;\r\n","import React from \"react\";\r\nimport classes from \"./Dialogs.module.css\";\r\nimport Message from \"./Message/Message\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { Textarea } from \"../common/FormsControls/FormsControls\";\r\nimport {\r\n\trequired,\r\n\tmaxLengthCreator,\r\n} from \"../../utils/validators/validator.js\";\r\n\r\nconst maxLength100 = maxLengthCreator(100);\r\n\r\nconst Dialogs = (props) => {\r\n\tlet dialogsElemetns = props.dialogsPage.dialogsData.map((dialog) => (\r\n\t\t<DialogItem name={dialog.name} id={dialog.id} />\r\n\t));\r\n\r\n\tlet messagesElements = props.dialogsPage.messagesData.map((message) => (\r\n\t\t<Message text={message.message} />\r\n\t));\r\n\r\n\tlet addNewMessage = (values) => {\r\n\t\tprops.sendMessage(values.newMessageBody);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className={classes.dialogs}>\r\n\t\t\t<div className={classes.dialogsItems}>{dialogsElemetns}</div>\r\n\t\t\t<div className={classes.messages}>\r\n\t\t\t\t<div>{messagesElements}</div>\r\n\t\t\t</div>\r\n\t\t\t<AddMessageFormRedux onSubmit={addNewMessage} />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst AddMessageForm = (props) => {\r\n\treturn (\r\n\t\t<form onSubmit={props.handleSubmit}>\r\n\t\t\t<div>\r\n\t\t\t\t<Field\r\n\t\t\t\t\tname=\"newMessageBody\"\r\n\t\t\t\t\tcomponent={Textarea}\r\n\t\t\t\t\tvalidate={[required, maxLength100]}\r\n\t\t\t\t\tplaceholder=\"Enter your message\"\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<button>Send</button>\r\n\t\t\t</div>\r\n\t\t</form>\r\n\t);\r\n};\r\n\r\nconst AddMessageFormRedux = reduxForm({ form: \"dialogAddMessageForm\" })(\r\n\tAddMessageForm\r\n);\r\n\r\nexport default Dialogs;\r\n","import Dialogs from \"./Dialogs\";\r\nimport { sendMessageCreator } from \"../../redux/dialogs-reducer\";\r\nimport { connect } from \"react-redux\";\r\nimport { withAuthRedirect } from \"../../hoc/withAutRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tdialogsPage: state.dialogsPage,\r\n\t\tisAuth: state.auth.isAuth,\r\n\t};\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\tsendMessage: (text) => {\r\n\t\t\tdispatch(sendMessageCreator(text));\r\n\t\t},\r\n\t};\r\n};\r\n\r\nexport default compose(\r\n\tconnect(mapStateToProps, mapDispatchToProps),\r\n\twithAuthRedirect\r\n)(Dialogs);\r\n"],"sourceRoot":""}